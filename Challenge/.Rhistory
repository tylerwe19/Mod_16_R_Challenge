q()
q()
q()
install.packages("<<library name>>")
install.packages("<<car>>")
q()
install.packages("<<library name>>")
q()
install.packages("<<library name>>")
q()
install.packages("<<library name>>")
install.packages("<<library name>>")
install.packages("<<cluster>>")
q()
AVERAGE(1,2,3,4,5)
mean(1,2,3,4,5)
mean(1, 2, 3, 4, 5)
mean(1, 3, 4, 5)
mean(2 3 4 5)
x <- c(8,4,6,9,3,10,240)
mean(x)
head(mpg)
head(mpg)
library(tidyverse)
head(mpg)
#create simple graph
#import dataset into ggplot
plt <- ggplot(mpg,aes(x=class))
#plot a bar plot
plt + geom_bar()
#visualize # of vehicles from each manufacturer
mpg_summary <- mpg %>% group_by(manufacturer) %>% summarize(Vehicle_Count=n(), .groups='keep')
#Import dataset into ggplot
plt <- ggplot(mpg_summary,aes(x=manufacturer,y=Vehicle_Count))
#Plot a bar plot
plt + geom_col()
View(mpg_summary)
View(mpg_summary)
#plot bar plot with labels
plt + geom_col()+xlab("Manufacturing Company") + ylab("Number of Vehicles in Dataset")
plt + geom_col()+xlab("Manufacturing Company") + ylab("Number of Vehicles in Dataset") +
theme(axis.text.x=element_text(angle=45,hjust=1))
#Build Line Plot
#Compare Toyota vehicles by comparing cylinder to avg high mpg
#Create summary table
mpg_summaryT <- subset(mpg,manufacturer=="toyota") %>% group_by(cyl) %>% summarize(Mean_Hwy=mean(hwy),.groups='keep')
#import dataset into ggplot
plt <- ggplot(mpg_summaryT,aes(x=cyl,y=Mean_Hwy))
View(mpg_summaryT)
#Build Line Plot
#Compare Toyota vehicles by comparing cylinder to avg high mpg
#Create summary table
mpg_summaryT <- subset(mpg,manufacturer=="toyota") %>% group_by(cyl) %>% summarize(Mean_Hwy=mean(hwy),.groups='keep')
#import dataset into ggplot
plt <- ggplot(mpg_summaryT,aes(x=cyl,y=Mean_Hwy))
#Plot line graph
plt + geom_line()
#Build Line Plot
#Compare Toyota vehicles by comparing cylinder to avg high mpg
#Create summary table
mpg_summaryT <- subset(mpg,manufacturer=="toyota") %>% group_by(cyl) %>% summarize(Mean_Hwy=mean(hwy),.groups='keep')
#import dataset into ggplot
plt <- ggplot(mpg_summaryT,aes(x=cyl,y=Mean_Hwy))
#Plot line graph with adjusted x-axis and y-axis tick values
plt + geom_line() + scale_x_discrete(limits = c(4,6,8)) + scale_y_continuous(breaks = c(16:30))
#Scatter plot relationship between car engine size and city mpg
#import dataset into ggplot
plt <- ggplot(mpg,aes(x=displ,y=city))
#Generate Scatter Plot with Labels
plt + geom_point() + xlab("Engine Size (L)") + ylab("City Fuel Efficiency (MPG)")
#Scatter plot relationship between car engine size and city mpg
#import dataset into ggplot
plt <- ggplot(mpg,aes(x=displ,y=cty))
#Generate Scatter Plot with Labels
plt + geom_point() + xlab("Engine Size (L)") + ylab("City Fuel Efficiency (MPG)")
#Scatter plot with custom aesthetics
#import dataset into ggplot
plt <- ggplot(mpg,aes(x=displ,y=cty,color=class))
#Scatter plot with labels
plt + geom_point() + labs(x="Engine Size (L)",y="City Fuel-Efficiency (MPG)", color="Vehicle Class")
#Multi-aesthetic scatter plot
#import dataset into ggplot. Note: drv is type of drive 4wd, front wheel drive, etc.
plt <- ggplot(mpg,aes(x=displ,y=cty,color=class,shape=drv))
#Scatter plot with multiple aesthetics
plt + geom_point() + labs(x="Engine Size (L)", y="City Fuel Efficiency (MPG)",color="Vehicle Class",shape="Type of Drive")
#Multi-aesthetic scatter plot
#import dataset into ggplot. Note: drv is type of drive 4wd, front wheel drive, etc.
plt <- ggplot(mpg,aes(x=displ,y=cty,color=class,shape=drv,size=cty))
#Scatter plot with multiple aesthetics
plt + geom_point() + labs(x="Engine Size (L)", y="City Fuel Efficiency (MPG)",color="Vehicle Class",shape="Type of Drive",size="City Fuel Efficiency")
#Generate Box Plot of Highway Fuel Efficiency
#import dataset into ggplot
plt <- ggplot(mpg,aes(y=hwy))
#Add boxplot
plt + geom_boxplot()
#Create boxplot for each car manufacturer's avg highway mpg
#import dataset into ggplot
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy))
#add boxplots and rotate xaxis labels 45 degrees
plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1))
#Create Heatmap Plots
#Avg hwy fuel efficiency across type of vehicle class from 1999 to 2008
#Create summary table
mpg_summaryH <- mpg %>% group_by(class,year) %>% summarize(Mean_Hwy=mean(hwy),.groups = 'keep')
#import dataset into ggplot
plt <- ggplot(mpg_summaryH, aes(x=class,y=factor(year),fill=Mean_Hwy))
#Create Heatmap with Labels
plt + geom_tile() + labs(x="Vehicle Class",y="Vehicle Year",fill="Mean Hwy (MPG)")
#Avg hwy fuel efficiency across each vehicle model from 1999 to 2008
#create summary table
mpg_summaryH2 <- mpg %>% group_by(model,year) %>% summarize(Mean_Hwy=mean(hwy),.groups = 'keep')
#import dataset into ggplot
plt <- ggplot(mpg_summaryH2, aes(x=model,y=factor(year),fill=Mean_Hwy))
plt + geom_tile() + labs(x="Model",y="Vehicle Year",fill="Mean Hwy (MPG)")+
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=.5))
#Layering Plots
#Boxplot with data points layered on top of it
#import dataset into ggplot
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy))
#add boxplot
plt+geom_boxplot
#Layering Plots
#Boxplot with data points layered on top of it
#import dataset into ggplot
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy))
#add boxplot
plt+geom_boxplot()
#rotate x-axis labels 45 degrees
theme(axis.text.x=element_text(angle=45,hjust=1))+
#overlay scatter plot data points on top
geom_point
#Layering Plots
#Boxplot with data points layered on top of it
#import dataset into ggplot
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy))
#add boxplot
plt+geom_boxplot()
#rotate x-axis labels 45 degrees
theme(axis.text.x=element_text(angle=45,hjust=1))+
#overlay scatter plot data points on top
geom_point()
#Layering Plots
#Boxplot with data points layered on top of it
#import dataset into ggplot
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy))
#add boxplot
plt+geom_boxplot()+
#rotate x-axis labels 45 degrees
theme(axis.text.x=element_text(angle=45,hjust=1))+
#Overlay scatter plot data points on top
geom_point()
#avg Engine size for each vehicle class
#create summary table
mpg_summaryEC <- mpg %>% group_by(class) %>% summarize(Mean_Engine = mean(displ),.groups = 'keep')
#import dataset into ggplot
plt <- ggplot(mpg_summaryEC, aes(x=class,y=Mean_Engine))
#Add Scatter Plot
plt + geom_point(size=4) + labs(x="Vehicle Class",y="Mean Engine Size")
#avg Engine size for each vehicle class
#create summary table
mpg_summarySDev <- mpg %>% group_by(class) %>% summarize(Mean_Engine = mean(displ),SD_Engine=sd(displ),.groups = 'keep')
#import dataset into ggplot
plt <- ggplot(mpg_summarySDev, aes(x=class,y=Mean_Engine))
#Add Scatter Plot
plt + geom_point(size=4) + labs(x="Vehicle Class",y="Mean Engine Size") +
#Overlay error bars
geom_errorbar(aes(ymin=Mean_Engine-SD_Engine,ymax = Mean_Engine+SD_Engine))
setwd("C:/Users/tyler/Desktop/KU_Data_Bootcamp/Module_16_R/R_Analysis/Challenge")
#Load dplyr
library(dplyr)
#Import MechaCar_mpg.csv
MechaCar_table <- read.csv(file='MechaCar_mpg.csv',check.names=F,stringsAsFactors = F)
View(MechaCar_table)
View(MechaCar_table)
#Multi Linear regression model using lm() function
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD)
#Multi Linear regression model using lm() function
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,data=MechaCar_table)
#Generate Summary Stats to determine pvalues and r-squared values
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,data=MechaCar_table))
#Technical Analysis
#Import Suspension_Coil.csv
SusCoil_table <- read.csv(file='Suspension_Coil.csv',check.names=F,stringsAsFactors = F)
View(SusCoil_table)
View(SusCoil_table)
#Create Summary Table
total_summary <- SusCoil_table %>% summarize(Mean_PSI=mean(PSI),Median_PSI=median(PSI),Variance_PSI=var(PSI),SD_PSI=sd(PSI), .groups='keep')
View(total_summary)
View(total_summary)
lot_summary <- SusCoil_table %>% group_by(Manufacturing_Lot) %>% summarize(Mean_PSI=mean(PSI),Median_PSI=median(PSI),Variance_PSI=var(PSI),SD_PSI=sd(PSI), .groups='keep')
View(lot_summary)
View(lot_summary)
#T-Tests on Suspension Coils
?t.test()
#Determine if PSI across all manufacturing lots is statistically different from pop'n mean of 1500
t.test(mean(lot_summary$Mean_PSI),mu=1500)
#Determine if PSI across all manufacturing lots is statistically different from pop'n mean of 1500
t.test(lot_summary$Mean_PSI,mu=1500)
#Write 3 more scripts to determine if PSI for each manufacturing lot is different from pop'n mean of 1500
t.test(lot_summary$Mean_PSI,mu=1500,subset=Lot1)
#Write 3 more scripts to determine if PSI for each manufacturing lot is different from pop'n mean of 1500
t.test(lot_summary$Mean_PSI,mu=1500,subset=Manufacturing_Lot %in% Lot1)
#Write 3 more scripts to determine if PSI for each manufacturing lot is different from pop'n mean of 1500
t.test(lot_summary$Mean_PSI,mu=1500,subset=Manufacturing_Lot %>% Lot1)
#Write 3 more scripts to determine if PSI for each manufacturing lot is different from pop'n mean of 1500
t.test(lot_summary$Mean_PSI,mu=1500,subset(lot_summary,Manufacturing_Lot = Lot1))
#Write 3 more scripts to determine if PSI for each manufacturing lot is different from pop'n mean of 1500
t.test(lot_summary$Mean_PSI,mu=1500,subset(lot_summary$Manufacturing_Lot == Lot1))
#Write 3 more scripts to determine if PSI for each manufacturing lot is different from pop'n mean of 1500
t.test(lot_summary$Mean_PSI,mu=1500,subset(lot_summary, Manufacturing_Lot == Lot1))
#Write 3 more scripts to determine if PSI for each manufacturing lot is different from pop'n mean of 1500
t.test(lot_summary$Mean_PSI,mu=1500,subset == Lot1))
#Write 3 more scripts to determine if PSI for each manufacturing lot is different from pop'n mean of 1500
t.test(lot_summary$Mean_PSI,mu=1500,subset(lot_summary, Manufacturing_Lot == Lot1))
#Write 3 more scripts to determine if PSI for each manufacturing lot is different from pop'n mean of 1500
t.test(lot_summary$Mean_PSI,mu=1500,subset(lot_summary, Manufacturing_Lot==Lot1))
#Write 3 more scripts to determine if PSI for each manufacturing lot is different from pop'n mean of 1500
t.test(lot_summary$Mean_PSI,mu=1500,subset(lot_summary, Manufacturing_Lot==Lot2))
#Write 3 more scripts to determine if PSI for each manufacturing lot is different from pop'n mean of 1500
t.test(lot_summary$Mean_PSI,mu=1500,subset(Manufacturing_Lot==Lot1))
#Write 3 more scripts to determine if PSI for each manufacturing lot is different from pop'n mean of 1500
t.test(lot_summary$Mean_PSI,mu=1500,subset(Lot1))
#Write 3 more scripts to determine if PSI for each manufacturing lot is different from pop'n mean of 1500
Lot1_sub <- subset(lot_summary, Manufacturing_Lot == Lot1)
#Write 3 more scripts to determine if PSI for each manufacturing lot is different from pop'n mean of 1500
Lot1_sub <- subset(lot_summary, Manufacturing_Lot == Lot 1)
#Write 3 more scripts to determine if PSI for each manufacturing lot is different from pop'n mean of 1500
Lot1_sub <- subset(SusCoil_table, Manufacturing_Lot == Lot1)
#Write 3 more scripts to determine if PSI for each manufacturing lot is different from pop'n mean of 1500
Lot1_sub <- subset(SusCoil_table, Manufacturing_Lot == "Lot1")
t.test(lot_summary$Mean_PSI,mu=1500,subset(SusCoil_table, Manufacturing_Lot == "Lot1"))
t.test(lot_summary$Mean_PSI,mu=1500,subset=Lot1_sub)
#Lot2 t.test
t.test(lot_summary$Mean_PSI,mu=1500,subset(SusCoil_table, Manufacturing_Lot == "Lot2"))
#Write 3 more scripts to determine if PSI for each manufacturing lot is different from pop'n mean of 1500
#Lot1 t.test
t.test(lot_summary$Mean_PSI,mu=1500,subset(lot_summary, Manufacturing_Lot == "Lot1"))
#Lot2 t.test
t.test(lot_summary$Mean_PSI,mu=1500,subset(lot_summary, Manufacturing_Lot == "Lot2"))
#Write 3 more scripts to determine if PSI for each manufacturing lot is different from pop'n mean of 1500
Lot1_sub <- subset(lot_summary, Manufacturing_Lot == "Lot1")
#Lot1 t.test
t.test(lot_summary$Mean_PSI,mu=1500,subset=Lot1_sub)
#Lot1 t.test
t.test(lot_summary$Mean_PSI,mu=1500,subset="Lot1")
#Lot1 t.test
t.test(lot_summary$Mean_PSI,mu=1500,subset=="Lot1")
#Lot2 t.test
t.test(lot_summary$Mean_PSI,mu=1500,subset(lot_summary, Manufacturing_Lot == "Lot2"))
#Load dplyr
library(dplyr)
#Import MechaCar_mpg.csv
MechaCar_table <- read.csv(file='MechaCar_mpg.csv',check.names=F,stringsAsFactors = F)
#Multi Linear regression model using lm() function
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,data=MechaCar_table)
#Generate Summary Stats to determine pvalues and r-squared values
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,data=MechaCar_table))
#Technical Analysis
#Import Suspension_Coil.csv
SusCoil_table <- read.csv(file='Suspension_Coil.csv',check.names=F,stringsAsFactors = F)
#Create Summary Table
total_summary <- SusCoil_table %>% summarize(Mean_PSI=mean(PSI),Median_PSI=median(PSI),Variance_PSI=var(PSI),SD_PSI=sd(PSI), .groups='keep')
lot_summary <- SusCoil_table %>% group_by(Manufacturing_Lot) %>% summarize(Mean_PSI=mean(PSI),Median_PSI=median(PSI),Variance_PSI=var(PSI),SD_PSI=sd(PSI), .groups='keep')
#T-Tests on Suspension Coils
?t.test()
#Determine if PSI across all manufacturing lots is statistically different from pop'n mean of 1500
t.test(lot_summary$Mean_PSI,mu=1500)
#Write 3 more scripts to determine if PSI for each manufacturing lot is different from pop'n mean of 1500
Lot1_sub <- subset(lot_summary, Manufacturing_Lot == "Lot1")
#Lot1 t.test
t.test(lot_summary$Mean_PSI,mu=1500,subset(lot_summary, Manufacturing_Lot == "Lot1"))
View(SusCoil_table)
#Lot1 t.test
t.test(subset(SusCoil_table,Manufacturing_Lot=="Lot1")$PSI,mu=1500)
View(total_summary)
View(lot_summary)
#Lot2 t.test
t.test(subset(SusCoil_table, Manufacturing_Lot=="Lot2")$PSI,mu=1500)
#Lot3 t.test
t.test(subset(SusCoil_table,Manufacturing_Lot=="Lot3")$PSI,mu=1500)
